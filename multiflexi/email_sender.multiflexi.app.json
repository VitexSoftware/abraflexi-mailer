{
    "image": "data:image\/svg+xml;base64,",
    "name": "Email Sender",
    "description": "Send unsent documents with attachments",
    "executable": "abraflexi-send-unsent-with-attachments",
    "setup": "",
    "cmdparams": "",
    "deploy": "apt install abraflexi-mailer",
    "homepage": "https://github.com/VitexSoftware/abraflexi-mailer/",
    "ociimage": "docker.io/vitexsoftware/abraflexi-mailer",
    "requirements": "AbraFlexi",
    "topics": "AbraFlexi,Mail,Sender",
    "uuid": "97c1c85d-3800-4d12-aabb-b60b15cd8df0",
    "environment": {
        "ABRAFLEXI_COMPANY": {
            "type": "string",
            "description": "AbraFlexi comapny code",
            "defval": "demo_de",
            "required": true
        },
        "ABRAFLEXI_LOGIN": {
            "type": "string",
            "description": "AbraFlexi Login",
            "defval": "winstrom",
            "required": true
        },
        "ABRAFLEXI_PASSWORD": {
            "type": "string",
            "description": "AbraFlexi password",
            "defval": "winstrom",
            "required": true
        },
        "ABRAFLEXI_URL": {
            "type": "string",
            "description": "AbraFlexi Server URI",
            "defval": "https:\/\/demo.flexibee.eu:5434",
            "required": true
        },
        "APP_DEBUG": {
            "type": "checkbox",
            "description": "Show debug messages",
            "defval": "False",
            "required": true
        },
        "MUTE": {
            "type": "checkbox",
            "description": "Do not send messages to customer",
            "defval": "False",
            "required": false
        },
        "EASE_MAILTO": {
            "type": "email",
            "description": "Default target whe MUTE is ON",
            "defval": "",
            "required": false
        },
        "ADD_LOGO": {
            "type": "checkbox",
            "description": "Include Graphical Logo into messages",
            "defval": "False",
            "required": false
        },
        "ADD_QRCODE": {
            "type": "checkbox",
            "description": "Include Payment QR Code into messages",
            "defval": "False",
            "required": false
        },
        "MAIL_CC": {
            "type": "email",
            "description": "Carbon Copy for every message sent",
            "defval": "",
            "required": false
        },
        "MAIL_FROM": {
            "type": "email",
            "description": "Default sender address",
            "defval": "",
            "required": false
        },
        "SEND_LOCKED": {
            "type": "checkbox",
            "description": "Try to temporary unlock document to save sent date in it",
            "defval": "False",
            "required": false
        },
        "DRY_RUN": {
            "type": "checkbox",
            "description": "Do not modify document in AbraFlexi (send state/date)",
            "defval": "False",
            "required": false
        }
    },
    "multiflexi": "1.7.2"
}
