{
    "image": "data:image\/svg+xml;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcKICAgeG1sbnM6bnMwPSImYW1wOyMzODsjMzg7bnNfYWk7IgogICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgIHhtbG5zOmNjPSJodHRwOi8vY3JlYXRpdmVjb21tb25zLm9yZy9ucyMiCiAgIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyIKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB4bWxuczpzb2RpcG9kaT0iaHR0cDovL3NvZGlwb2RpLnNvdXJjZWZvcmdlLm5ldC9EVEQvc29kaXBvZGktMC5kdGQiCiAgIHhtbG5zOmlua3NjYXBlPSJodHRwOi8vd3d3Lmlua3NjYXBlLm9yZy9uYW1lc3BhY2VzL2lua3NjYXBlIgogICBzb2RpcG9kaTpkb2NuYW1lPSJwcm9qZWN0LWxvZ28uc3ZnIgogICBpbmtzY2FwZTp2ZXJzaW9uPSIxLjAgKDQwMzVhNGZiNDksIDIwMjAtMDUtMDEpIgogICBpZD0ic3ZnOCIKICAgdmVyc2lvbj0iMS4xIgogICB2aWV3Qm94PSIwIDAgMTAwIDEwMCIKICAgaGVpZ2h0PSIxMDBtbSIKICAgd2lkdGg9IjEwMG1tIj4KICA8ZGVmcwogICAgIGlkPSJkZWZzMiI+CiAgICA8Y2xpcFBhdGgKICAgICAgIGlkPSJjbGlwUGF0aDM0NDQiPgogICAgICA8cGF0aAogICAgICAgICBpZD0icGF0aDM0NDYiCiAgICAgICAgIGQ9Ik0gMTEuNTIsMTYyIEMgMTEuNTIsODEuNjc3IDEzNS4zMDcsMTYuNTYgMjg4LDE2LjU2IDQ0MC42OTMsMTYuNTYgNTY0LjQ4LDgxLjY3OCA1NjQuNDgsMTYyIDU2NC40OCwyNDIuMzIyIDQ0MC42OTMsMzA3LjQ0IDI4OCwzMDcuNDQgMTM1LjMwNywzMDcuNDQgMTEuNTIsMjQyLjMyIDExLjUyLDE2MiIgLz4KICAgIDwvY2xpcFBhdGg+CiAgICA8cmFkaWFsR3JhZGllbnQKICAgICAgIGlkPSJyYWRpYWxHcmFkaWVudDM0NTIiCiAgICAgICBjeD0iMCIKICAgICAgIGN5PSIwIgogICAgICAgcj0iMSIKICAgICAgIGZ4PSIwIgogICAgICAgZnk9IjAiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDM2My4wNiwwLDAsLTM2My4wNiwxNzcuNTIsMjU2LjMxKSIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgc3ByZWFkTWV0aG9kPSJwYWQiPgogICAgICA8c3RvcAogICAgICAgICBpZD0ic3RvcDM0NTQiCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgc3RvcC1jb2xvcj0iI2FlYjJkNSIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzNDU2IgogICAgICAgICBvZmZzZXQ9IjAuMyIKICAgICAgICAgc3RvcC1jb2xvcj0iI2FlYjJkNSIgLz4KICAgICAgPHN0b3AKICAgICAgICAgaWQ9InN0b3AzNDU4IgogICAgICAgICBvZmZzZXQ9IjAuNzUiCiAgICAgICAgIHN0b3AtY29sb3I9IiM0ODRjODkiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIGlkPSJzdG9wMzQ2MCIKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdG9wLWNvbG9yPSIjNDg0Yzg5IiAvPgogICAgPC9yYWRpYWxHcmFkaWVudD4KICAgIDxjbGlwUGF0aAogICAgICAgaWQ9ImNsaXBQYXRoMzQ2OCI+CiAgICAgIDxwYXRoCiAgICAgICAgIGlkPSJwYXRoMzQ3MCIKICAgICAgICAgZD0iTSAwLDMyNCBIIDU3NiBWIDAgSCAwIFoiIC8+CiAgICA8L2NsaXBQYXRoPgogICAgPGZpbHRlcgogICAgICAgc3R5bGU9ImNvbG9yLWludGVycG9sYXRpb24tZmlsdGVyczpzUkdCIgogICAgICAgaW5rc2NhcGU6bGFiZWw9IkRyb3AgU2hhZG93IgogICAgICAgaWQ9ImZpbHRlcjQ2MjIiPgogICAgICA8ZmVGbG9vZAogICAgICAgICBmbG9vZC1vcGFjaXR5PSIwLjQ5ODAzOSIKICAgICAgICAgZmxvb2QtY29sb3I9InJnYigwLDAsMCkiCiAgICAgICAgIHJlc3VsdD0iZmxvb2QiCiAgICAgICAgIGlkPSJmZUZsb29kNDYxMiIgLz4KICAgICAgPGZlQ29tcG9zaXRlCiAgICAgICAgIGluPSJmbG9vZCIKICAgICAgICAgaW4yPSJTb3VyY2VHcmFwaGljIgogICAgICAgICBvcGVyYXRvcj0iaW4iCiAgICAgICAgIHJlc3VsdD0iY29tcG9zaXRlMSIKICAgICAgICAgaWQ9ImZlQ29tcG9zaXRlNDYxNCIgLz4KICAgICAgPGZlR2F1c3NpYW5CbHVyCiAgICAgICAgIGluPSJjb21wb3NpdGUxIgogICAgICAgICBzdGREZXZpYXRpb249IjYiCiAgICAgICAgIHJlc3VsdD0iYmx1ciIKICAgICAgICAgaWQ9ImZlR2F1c3NpYW5CbHVyNDYxNiIgLz4KICAgICAgPGZlT2Zmc2V0CiAgICAgICAgIGR4PSI2IgogICAgICAgICBkeT0iNiIKICAgICAgICAgcmVzdWx0PSJvZmZzZXQiCiAgICAgICAgIGlkPSJmZU9mZnNldDQ2MTgiIC8+CiAgICAgIDxmZUNvbXBvc2l0ZQogICAgICAgICBpbj0iU291cmNlR3JhcGhpYyIKICAgICAgICAgaW4yPSJvZmZzZXQiCiAgICAgICAgIG9wZXJhdG9yPSJvdmVyIgogICAgICAgICByZXN1bHQ9ImZiU291cmNlR3JhcGhpYyIKICAgICAgICAgaWQ9ImZlQ29tcG9zaXRlNDYyMCIgLz4KICAgICAgPGZlQ29sb3JNYXRyaXgKICAgICAgICAgcmVzdWx0PSJmYlNvdXJjZUdyYXBoaWNBbHBoYSIKICAgICAgICAgaW49ImZiU291cmNlR3JhcGhpYyIKICAgICAgICAgdmFsdWVzPSIwIDAgMCAtMSAwIDAgMCAwIC0xIDAgMCAwIDAgLTEgMCAwIDAgMCAxIDAiCiAgICAgICAgIGlkPSJmZUNvbG9yTWF0cml4NDYyNCIgLz4KICAgICAgPGZlRmxvb2QKICAgICAgICAgaWQ9ImZlRmxvb2Q0NjI2IgogICAgICAgICBmbG9vZC1vcGFjaXR5PSIwLjQ5ODAzOSIKICAgICAgICAgZmxvb2QtY29sb3I9InJnYigwLDAsMCkiCiAgICAgICAgIHJlc3VsdD0iZmxvb2QiCiAgICAgICAgIGluPSJmYlNvdXJjZUdyYXBoaWMiIC8+CiAgICAgIDxmZUNvbXBvc2l0ZQogICAgICAgICBpbjI9ImZiU291cmNlR3JhcGhpYyIKICAgICAgICAgaWQ9ImZlQ29tcG9zaXRlNDYyOCIKICAgICAgICAgaW49ImZsb29kIgogICAgICAgICBvcGVyYXRvcj0iaW4iCiAgICAgICAgIHJlc3VsdD0iY29tcG9zaXRlMSIgLz4KICAgICAgPGZlR2F1c3NpYW5CbHVyCiAgICAgICAgIGlkPSJmZUdhdXNzaWFuQmx1cjQ2MzAiCiAgICAgICAgIGluPSJjb21wb3NpdGUxIgogICAgICAgICBzdGREZXZpYXRpb249IjYiCiAgICAgICAgIHJlc3VsdD0iYmx1ciIgLz4KICAgICAgPGZlT2Zmc2V0CiAgICAgICAgIGlkPSJmZU9mZnNldDQ2MzIiCiAgICAgICAgIGR4PSI2IgogICAgICAgICBkeT0iNiIKICAgICAgICAgcmVzdWx0PSJvZmZzZXQiIC8+CiAgICAgIDxmZUNvbXBvc2l0ZQogICAgICAgICBpbjI9Im9mZnNldCIKICAgICAgICAgaWQ9ImZlQ29tcG9zaXRlNDYzNCIKICAgICAgICAgaW49ImZiU291cmNlR3JhcGhpYyIKICAgICAgICAgb3BlcmF0b3I9Im92ZXIiCiAgICAgICAgIHJlc3VsdD0iZmJTb3VyY2VHcmFwaGljIiAvPgogICAgICA8ZmVDb2xvck1hdHJpeAogICAgICAgICByZXN1bHQ9ImZiU291cmNlR3JhcGhpY0FscGhhIgogICAgICAgICBpbj0iZmJTb3VyY2VHcmFwaGljIgogICAgICAgICB2YWx1ZXM9IjAgMCAwIC0xIDAgMCAwIDAgLTEgMCAwIDAgMCAtMSAwIDAgMCAwIDEgMCIKICAgICAgICAgaWQ9ImZlQ29sb3JNYXRyaXg0NjM2IiAvPgogICAgICA8ZmVGbG9vZAogICAgICAgICBpZD0iZmVGbG9vZDQ2MzgiCiAgICAgICAgIGZsb29kLW9wYWNpdHk9IjAuNDk4MDM5IgogICAgICAgICBmbG9vZC1jb2xvcj0icmdiKDAsMCwwKSIKICAgICAgICAgcmVzdWx0PSJmbG9vZCIKICAgICAgICAgaW49ImZiU291cmNlR3JhcGhpYyIgLz4KICAgICAgPGZlQ29tcG9zaXRlCiAgICAgICAgIGluMj0iZmJTb3VyY2VHcmFwaGljIgogICAgICAgICBpZD0iZmVDb21wb3NpdGU0NjQwIgogICAgICAgICBpbj0iZmxvb2QiCiAgICAgICAgIG9wZXJhdG9yPSJpbiIKICAgICAgICAgcmVzdWx0PSJjb21wb3NpdGUxIiAvPgogICAgICA8ZmVHYXVzc2lhbkJsdXIKICAgICAgICAgaWQ9ImZlR2F1c3NpYW5CbHVyNDY0MiIKICAgICAgICAgaW49ImNvbXBvc2l0ZTEiCiAgICAgICAgIHN0ZERldmlhdGlvbj0iNiIKICAgICAgICAgcmVzdWx0PSJibHVyIiAvPgogICAgICA8ZmVPZmZzZXQKICAgICAgICAgaWQ9ImZlT2Zmc2V0NDY0NCIKICAgICAgICAgZHg9IjYiCiAgICAgICAgIGR5PSI2IgogICAgICAgICByZXN1bHQ9Im9mZnNldCIgLz4KICAgICAgPGZlQ29tcG9zaXRlCiAgICAgICAgIGluMj0ib2Zmc2V0IgogICAgICAgICBpZD0iZmVDb21wb3NpdGU0NjQ2IgogICAgICAgICBpbj0iZmJTb3VyY2VHcmFwaGljIgogICAgICAgICBvcGVyYXRvcj0ib3ZlciIKICAgICAgICAgcmVzdWx0PSJjb21wb3NpdGUyIiAvPgogICAgPC9maWx0ZXI+CiAgICA8ZmlsdGVyCiAgICAgICBzdHlsZT0iY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzOnNSR0IiCiAgICAgICBpbmtzY2FwZTpsYWJlbD0iQmx1ciIKICAgICAgIGlkPSJmaWx0ZXIyMDU4Ij4KICAgICAgPGZlR2F1c3NpYW5CbHVyCiAgICAgICAgIHN0ZERldmlhdGlvbj0iMTAuNTYzNSAwLjAxIgogICAgICAgICByZXN1bHQ9ImZiU291cmNlR3JhcGhpYyIKICAgICAgICAgaWQ9ImZlR2F1c3NpYW5CbHVyMjA1NiIgLz4KICAgICAgPGZlQ29sb3JNYXRyaXgKICAgICAgICAgcmVzdWx0PSJmYlNvdXJjZUdyYXBoaWNBbHBoYSIKICAgICAgICAgaW49ImZiU291cmNlR3JhcGhpYyIKICAgICAgICAgdmFsdWVzPSIwIDAgMCAtMSAwIDAgMCAwIC0xIDAgMCAwIDAgLTEgMCAwIDAgMCAxIDAiCiAgICAgICAgIGlkPSJmZUNvbG9yTWF0cml4MjA2MCIgLz4KICAgICAgPGZlR2F1c3NpYW5CbHVyCiAgICAgICAgIGlkPSJmZUdhdXNzaWFuQmx1cjIwNjIiCiAgICAgICAgIHN0ZERldmlhdGlvbj0iMTAuNTYzNSAwLjAxIgogICAgICAgICByZXN1bHQ9ImJsdXIiCiAgICAgICAgIGluPSJmYlNvdXJjZUdyYXBoaWMiIC8+CiAgICA8L2ZpbHRlcj4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9IlhNTElEXzFfIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICB4MT0iMTY4LjAzNjEiCiAgICAgICB5MT0iMTY4LjIxMDAxIgogICAgICAgeDI9IjgzLjE0OTkwMiIKICAgICAgIHkyPSI4My4zMjQzMDMiPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM2RDdCQjAiCiAgICAgICAgIGlkPSJzdG9wMTY0IiAvPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM5OUFDRDIiCiAgICAgICAgIGlkPSJzdG9wMTY1IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9IlhNTElEXzJfIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICB4MT0iMTY4LjcxNzgiCiAgICAgICB5MT0iMTc0LjYzNTciCiAgICAgICB4Mj0iODMuODMxNzAzIgogICAgICAgeTI9Ijg5Ljc1MDI5OCI+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzZEN0JCMCIKICAgICAgICAgaWQ9InN0b3AxNzEiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMSIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6Izk5QUNEMiIKICAgICAgICAgaWQ9InN0b3AxNzIiIC8+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGxpbmVhckdyYWRpZW50CiAgICAgICBpZD0iWE1MSURfM18iCiAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgIHgxPSIxMjYuOTc5NSIKICAgICAgIHkxPSIxMzAuOTkyMiIKICAgICAgIHgyPSIyMzMuNTYyMTkiCiAgICAgICB5Mj0iMjM3LjU3NiIKICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45OTI5LC0wLjExOTEsLTAuMDU2LDEuMDEzOCw3Ljc1NTYsOC44NzYpIj4KICAgICAgPHN0b3AKICAgICAgICAgb2Zmc2V0PSIwIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojRDhFMUVEIgogICAgICAgICBpZD0ic3RvcDE3OCIgLz4KICAgICAgPHN0b3AKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNUU3NkFBIgogICAgICAgICBpZD0ic3RvcDE3OSIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICA8bGluZWFyR3JhZGllbnQKICAgICAgIGlkPSJYTUxJRF80XyIKICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgeDE9IjEyNi4wMzgxIgogICAgICAgeTE9IjE0NC44MTg0MSIKICAgICAgIHgyPSIxMjYuMDM4MSIKICAgICAgIHkyPSI3Ny41NjcyOTkiPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjAiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM4MDhEQzIiCiAgICAgICAgIGlkPSJzdG9wMTg1IiAvPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjEiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM1RTc2QUEiCiAgICAgICAgIGlkPSJzdG9wMTg2IiAvPgogICAgPC9saW5lYXJHcmFkaWVudD4KICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgaWQ9IlhNTElEXzVfIgogICAgICAgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiCiAgICAgICB4MT0iMTIxLjI3NjkiCiAgICAgICB5MT0iOTEuOTcxNzAzIgogICAgICAgeDI9IjEyMS4yNzY5IgogICAgICAgeTI9IjEzLjM4NzkiCiAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTkyOSwtMC4xMTkxLC0wLjA1NiwxLjAxMzgsNy43NTU2LDguODc2KSI+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMCIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I0RCRThGMiIKICAgICAgICAgaWQ9InN0b3AxOTIiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMC4yODQ3IgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojRDlFNkYxIgogICAgICAgICBpZD0ic3RvcDE5MyIgLz4KICAgICAgPHN0b3AKICAgICAgICAgb2Zmc2V0PSIwLjQzNTkiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNEMURGRUQiCiAgICAgICAgIGlkPSJzdG9wMTk0IiAvPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjAuNTU1NyIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I0MzRDNFNyIKICAgICAgICAgaWQ9InN0b3AxOTUiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMC42NTkiCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNCMEMzREYiCiAgICAgICAgIGlkPSJzdG9wMTk2IiAvPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjAuNzUxOCIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6Izk3QUREMyIKICAgICAgICAgaWQ9InN0b3AxOTciIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMC44MzciCiAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM3ODkzQzUiCiAgICAgICAgIGlkPSJzdG9wMTk4IiAvPgogICAgICA8c3RvcAogICAgICAgICBvZmZzZXQ9IjAuOTE2MyIKICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzU0NzNCNSIKICAgICAgICAgaWQ9InN0b3AxOTkiIC8+CiAgICAgIDxzdG9wCiAgICAgICAgIG9mZnNldD0iMC45ODkxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMkI1MEEyIgogICAgICAgICBpZD0ic3RvcDIwMCIgLz4KICAgICAgPHN0b3AKICAgICAgICAgb2Zmc2V0PSIxIgogICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMjQ0QTlGIgogICAgICAgICBpZD0ic3RvcDIwMSIgLz4KICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgPC9kZWZzPgogIDxzb2RpcG9kaTpuYW1lZHZpZXcKICAgICBpbmtzY2FwZTp3aW5kb3ctbWF4aW1pemVkPSIxIgogICAgIGlua3NjYXBlOndpbmRvdy15PSIwIgogICAgIGlua3NjYXBlOndpbmRvdy14PSIwIgogICAgIGlua3NjYXBlOndpbmRvdy1oZWlnaHQ9IjEwNTEiCiAgICAgaW5rc2NhcGU6d2luZG93LXdpZHRoPSIxOTIwIgogICAgIHNob3dncmlkPSJmYWxzZSIKICAgICBpbmtzY2FwZTpkb2N1bWVudC1yb3RhdGlvbj0iMCIKICAgICBpbmtzY2FwZTpjdXJyZW50LWxheWVyPSJnMjU5OCIKICAgICBpbmtzY2FwZTpkb2N1bWVudC11bml0cz0ibW0iCiAgICAgaW5rc2NhcGU6Y3k9IjE2Mi43MjEzNSIKICAgICBpbmtzY2FwZTpjeD0iLTg2LjY0Nzk0MyIKICAgICBpbmtzY2FwZTp6b29tPSIwLjk4OTk0OTQ5IgogICAgIGlua3NjYXBlOnBhZ2VzaGFkb3c9IjIiCiAgICAgaW5rc2NhcGU6cGFnZW9wYWNpdHk9IjAuMCIKICAgICBib3JkZXJvcGFjaXR5PSIxLjAiCiAgICAgYm9yZGVyY29sb3I9IiM2NjY2NjYiCiAgICAgcGFnZWNvbG9yPSIjZmZmZmZmIgogICAgIGlkPSJiYXNlIiAvPgogIDxtZXRhZGF0YQogICAgIGlkPSJtZXRhZGF0YTUiPgogICAgPHJkZjpSREY+CiAgICAgIDxjYzpXb3JrCiAgICAgICAgIHJkZjphYm91dD0iIj4KICAgICAgICA8ZGM6Zm9ybWF0PmltYWdlL3N2Zyt4bWw8L2RjOmZvcm1hdD4KICAgICAgICA8ZGM6dHlwZQogICAgICAgICAgIHJkZjpyZXNvdXJjZT0iaHR0cDovL3B1cmwub3JnL2RjL2RjbWl0eXBlL1N0aWxsSW1hZ2UiIC8+CiAgICAgICAgPGRjOnRpdGxlPjwvZGM6dGl0bGU+CiAgICAgIDwvY2M6V29yaz4KICAgIDwvcmRmOlJERj4KICA8L21ldGFkYXRhPgogIDxnCiAgICAgaWQ9ImxheWVyMSIKICAgICBpbmtzY2FwZTpncm91cG1vZGU9ImxheWVyIgogICAgIGlua3NjYXBlOmxhYmVsPSJWcnN0dmEgMSIgLz4KICA8ZwogICAgIGlua3NjYXBlOmxhYmVsPSJWcnN0dmEgMyIKICAgICBpZD0ibGF5ZXIzIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiPgogICAgPGcKICAgICAgIHRyYW5zZm9ybT0ibWF0cml4KDEuNDAzMzQ4MSwwLDAsMS40MDMzNDgxLDEyMC42NzU3OCw3LjAyMzEyNTIpIgogICAgICAgaWQ9ImcyNTk4Ij4KICAgICAgPGcKICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTEuODg1MzcyMSkiCiAgICAgICAgIGlkPSJnMjg3MCI+CiAgICAgICAgPGcKICAgICAgICAgICBpZD0iZzkzOSIKICAgICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjM3MjU4OTE5LDAsMCwwLjM3MjU4OTE5LC02Mi44MDMwMSw5LjY2NDA1MTEpIj4KICAgICAgICAgIDxnCiAgICAgICAgICAgICBpZD0iZzM0NDAiCiAgICAgICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjMzMDcyODc0LDAsMCwtMC4zMzA3Mjg3NCwtNTcuMjk3NjA0LDkzLjUzNDg1KSI+CiAgICAgICAgICAgIDxnCiAgICAgICAgICAgICAgIGNsaXAtcGF0aD0idXJsKCNjbGlwUGF0aDM0NDQpIgogICAgICAgICAgICAgICBpZD0iZzM0NDIiPgogICAgICAgICAgICAgIDxnCiAgICAgICAgICAgICAgICAgaWQ9ImczNDQ4Ij4KICAgICAgICAgICAgICAgIDxnCiAgICAgICAgICAgICAgICAgICBpZD0iZzM0NTAiPgogICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZmlsbDp1cmwoI3JhZGlhbEdyYWRpZW50MzQ1MikiCiAgICAgICAgICAgICAgICAgICAgIGQ9Ik0gMTEuNTIsMTYyIEMgMTEuNTIsODEuNjc3IDEzNS4zMDcsMTYuNTYgMjg4LDE2LjU2IDQ0MC42OTMsMTYuNTYgNTY0LjQ4LDgxLjY3OCA1NjQuNDgsMTYyIDU2NC40OCwyNDIuMzIyIDQ0MC42OTMsMzA3LjQ0IDI4OCwzMDcuNDQgMTM1LjMwNywzMDcuNDQgMTEuNTIsMjQyLjMyIDExLjUyLDE2MiIKICAgICAgICAgICAgICAgICAgICAgaWQ9InBhdGgzNDYyIiAvPgogICAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgPC9nPgogICAgICAgICAgPC9nPgogICAgICAgICAgPGcKICAgICAgICAgICAgIGlkPSJnMzQ2NCIKICAgICAgICAgICAgIHRyYW5zZm9ybT0ibWF0cml4KDAuMzMwNzI4NzQsMCwwLC0wLjMzMDcyODc0LC01Ny4yOTc2MDQsOTMuNTM0ODUpIj4KICAgICAgICAgICAgPGcKICAgICAgICAgICAgICAgY2xpcC1wYXRoPSJ1cmwoI2NsaXBQYXRoMzQ2OCkiCiAgICAgICAgICAgICAgIGlkPSJnMzQ2NiI+CiAgICAgICAgICAgICAgPGcKICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgyODgsMjcuMzYpIgogICAgICAgICAgICAgICAgIGlkPSJnMzQ3MiI+CiAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6Izc3N2JiMyIKICAgICAgICAgICAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgICAgICAgICAgICBkPSJNIDAsMCBDIDE0Ni43MywwIDI2NS42OCw2MC4yOCAyNjUuNjgsMTM0LjY0IDI2NS42OCwyMDkgMTQ2LjczLDI2OS4yODMgMCwyNjkuMjgzIGMgLTE0Ni43MywwIC0yNjUuNjgsLTYwLjI4MiAtMjY1LjY4LC0xMzQuNjQgQyAtMjY1LjY4LDYwLjI4IC0xNDYuNzMsMCAwLDAiCiAgICAgICAgICAgICAgICAgICBpZD0icGF0aDM0NzQiIC8+CiAgICAgICAgICAgICAgPC9nPgogICAgICAgICAgICA8L2c+CiAgICAgICAgICA8L2c+CiAgICAgICAgICA8ZwogICAgICAgICAgICAgdHJhbnNmb3JtPSJtYXRyaXgoMC4zMzA3Mjg3NCwwLDAsLTAuMzMwNzI4NzQsLTU3LjI5NzYwNCw5My41MzQ4NSkiCiAgICAgICAgICAgICBpZD0iZzQ1MTQiCiAgICAgICAgICAgICBzdHlsZT0iZmlsdGVyOnVybCgjZmlsdGVyNDYyMikiPgogICAgICAgICAgICA8ZwogICAgICAgICAgICAgICBpZD0iZzE0IgogICAgICAgICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgyOC4zNzcwMTcsMCwwLC0yOC4zNzcwMTcsMTA4Ljc5MDM0LDg0MTUuNTg1NCkiPgogICAgICAgICAgICAgIDxnCiAgICAgICAgICAgICAgICAgaWQ9ImcxMiIKICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjAxNTYwOSwwLDAsLTAuMDE1NjA5LC0xOC4yNTEsMjk0LjMxKSIKICAgICAgICAgICAgICAgICBzdHlsZT0iY2xpcC1ydWxlOmV2ZW5vZGQ7aW1hZ2UtcmVuZGVyaW5nOm9wdGltaXplUXVhbGl0eTtzaGFwZS1yZW5kZXJpbmc6Z2VvbWV0cmljUHJlY2lzaW9uIj4KICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICBpZD0icGF0aDQiCiAgICAgICAgICAgICAgICAgICBkPSJNIDE3MDguNywwIDE4NDIuNSwyMzEuNjIgMTk3Ni4yLDAgWiIKICAgICAgICAgICAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojZjlhZTJkIiAvPgogICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgIGlkPSJwYXRoNiIKICAgICAgICAgICAgICAgICAgIGQ9Im0gMTcwOC43LDAgLTEzMy43NSwyMzEuNjIgaCAyNjcuNTMgeiIKICAgICAgICAgICAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojZDI4YjI1IiAvPgogICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgIGlkPSJwYXRoOCIKICAgICAgICAgICAgICAgICAgIGQ9Ik0gMTU3NC45LDIzMS42MiAxNzA4LjY1LDQ2My4zIDE4NDIuNDMsMjMxLjYyIFoiCiAgICAgICAgICAgICAgICAgICBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPSIwIgogICAgICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6IzkzNjMyNyIgLz4KICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICBpZD0icGF0aDEwIgogICAgICAgICAgICAgICAgICAgZD0iTSAxNzA4LjcsNDYzLjMgSCAxNDQxLjIgTCAxMTczLjYsMCBoIDI2Ny41NiBsIDI2Ny40Nyw0NjMuMyIKICAgICAgICAgICAgICAgICAgIGlua3NjYXBlOmNvbm5lY3Rvci1jdXJ2YXR1cmU9IjAiCiAgICAgICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojNzY3YTdjIiAvPgogICAgICAgICAgICAgIDwvZz4KICAgICAgICAgICAgPC9nPgogICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgICAgICA8ZwogICAgICAgICAgIHRyYW5zZm9ybT0ibWF0cml4KDAuMDY2MTQ1ODMsMCwwLDAuMDY2MTQ1ODMsLTU0LjYzMTQ2LDM0LjYzMjUzOCkiCiAgICAgICAgICAgaWQ9IkxheWVyXzIiCiAgICAgICAgICAgbnMwOmxheWVyPSJ5ZXMiCiAgICAgICAgICAgbnMwOmVkaXRhYmxlPSJubyIKICAgICAgICAgICBuczA6ZGltbWVkUGVyY2VudD0iNTAiCiAgICAgICAgICAgbnMwOnJnYlRyaW89IiNGRkZGNEYwMDRGMDAiCiAgICAgICAgICAgc3R5bGU9Im92ZXJmbG93OnZpc2libGU7c3Ryb2tlOiMwMDAwMDAiPgogICAgICAgICAgPHBhdGgKICAgICAgICAgICAgIG5zMDprbm9ja291dD0iT2ZmIgogICAgICAgICAgICAgc3R5bGU9Im9wYWNpdHk6MC4zNjtmaWxsOm5vbmU7c3Ryb2tlOm5vbmUiCiAgICAgICAgICAgICBkPSJNIDI1NiwyNTYgSCAwIFYgMCBoIDI1NiB6IgogICAgICAgICAgICAgaWQ9InBhdGgxNTYiIC8+CiAgICAgICAgPC9nPgogICAgICAgIDxnCiAgICAgICAgICAgaWQ9ImcyNzg4IgogICAgICAgICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKDAuMzc3MDc0NDYsLTAuNzU0MTQ4ODQpIj4KICAgICAgICAgIDxnCiAgICAgICAgICAgICBzdHlsZT0ib3ZlcmZsb3c6dmlzaWJsZTtmaWx0ZXI6dXJsKCNmaWx0ZXIyMDU4KSIKICAgICAgICAgICAgIGlkPSJnMjAzNCIKICAgICAgICAgICAgIHRyYW5zZm9ybT0ibWF0cml4KDAuMDY2MTQ1ODMsMCwwLDAuMDY2MTQ1ODMsLTU0LjYzMTQ2LDM0LjYzMjUzOCkiPgogICAgICAgICAgICA8cmVjdAogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojZmY3ZjJhO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDowLjQ7c3Ryb2tlLW9wYWNpdHk6MC4wODE3MDI2IgogICAgICAgICAgICAgICBpZD0icmVjdDIwMDciCiAgICAgICAgICAgICAgIHdpZHRoPSIyOTAuMzU2MzIiCiAgICAgICAgICAgICAgIGhlaWdodD0iMjEuNTY0NDg3IgogICAgICAgICAgICAgICB4PSItMjE4Ljg3ODE2IgogICAgICAgICAgICAgICB5PSI4MC43ODcxNjMiCiAgICAgICAgICAgICAgIHJ5PSIxMC43ODIyNDQiCiAgICAgICAgICAgICAgIHRyYW5zZm9ybT0icm90YXRlKC0xMC4xNTMxMykiIC8+CiAgICAgICAgICAgIDxyZWN0CiAgICAgICAgICAgICAgIHJ5PSIxMC43ODIyNDQiCiAgICAgICAgICAgICAgIHk9IjExMi43ODcxNiIKICAgICAgICAgICAgICAgeD0iLTIxOC44NzgxNiIKICAgICAgICAgICAgICAgaGVpZ2h0PSIyMS41NjQ0ODciCiAgICAgICAgICAgICAgIHdpZHRoPSIyOTAuMzU2MzIiCiAgICAgICAgICAgICAgIGlkPSJyZWN0MjAxOCIKICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6I2Q0NTUwMDtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MC40O3N0cm9rZS1vcGFjaXR5OjAuMDgxNzAyNiIKICAgICAgICAgICAgICAgdHJhbnNmb3JtPSJyb3RhdGUoLTEwLjE1MzEzKSIgLz4KICAgICAgICAgICAgPHJlY3QKICAgICAgICAgICAgICAgcnk9IjEwLjc4MjI0NCIKICAgICAgICAgICAgICAgeT0iNDguNzg3MTQiCiAgICAgICAgICAgICAgIHg9Ii0yMTguODc4MTYiCiAgICAgICAgICAgICAgIGhlaWdodD0iMjEuNTY0NDg3IgogICAgICAgICAgICAgICB3aWR0aD0iMjkwLjM1NjMyIgogICAgICAgICAgICAgICBpZD0icmVjdDIwMjAiCiAgICAgICAgICAgICAgIHN0eWxlPSJmaWxsOiNmZmIzODA7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjAuNDtzdHJva2Utb3BhY2l0eTowLjA4MTcwMjYiCiAgICAgICAgICAgICAgIHRyYW5zZm9ybT0icm90YXRlKC0xMC4xNTMxMykiIC8+CiAgICAgICAgICAgIDxyZWN0CiAgICAgICAgICAgICAgIHJ5PSIxMC43ODIyNDQiCiAgICAgICAgICAgICAgIHk9IjE3Ni43ODcxMiIKICAgICAgICAgICAgICAgeD0iLTIxOC44NzgxNiIKICAgICAgICAgICAgICAgaGVpZ2h0PSIyMS41NjQ0ODciCiAgICAgICAgICAgICAgIHdpZHRoPSIyOTAuMzU2MzIiCiAgICAgICAgICAgICAgIGlkPSJyZWN0MjAyMiIKICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6I2ZmN2YyYTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MC40O3N0cm9rZS1vcGFjaXR5OjAuMDgxNzAyNiIKICAgICAgICAgICAgICAgdHJhbnNmb3JtPSJyb3RhdGUoLTEwLjE1MzEzKSIgLz4KICAgICAgICAgICAgPHJlY3QKICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6I2Q0NTUwMDtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MC40O3N0cm9rZS1vcGFjaXR5OjAuMDgxNzAyNiIKICAgICAgICAgICAgICAgaWQ9InJlY3QyMDI0IgogICAgICAgICAgICAgICB3aWR0aD0iMjkwLjM1NjMyIgogICAgICAgICAgICAgICBoZWlnaHQ9IjIxLjU2NDQ4NyIKICAgICAgICAgICAgICAgeD0iLTIxOC44NzgxNiIKICAgICAgICAgICAgICAgeT0iMjA4Ljc4NzEyIgogICAgICAgICAgICAgICByeT0iMTAuNzgyMjQ0IgogICAgICAgICAgICAgICB0cmFuc2Zvcm09InJvdGF0ZSgtMTAuMTUzMTMpIiAvPgogICAgICAgICAgICA8cmVjdAogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojZmZiMzgwO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDowLjQ7c3Ryb2tlLW9wYWNpdHk6MC4wODE3MDI2IgogICAgICAgICAgICAgICBpZD0icmVjdDIwMjYiCiAgICAgICAgICAgICAgIHdpZHRoPSIyOTAuMzU2MzIiCiAgICAgICAgICAgICAgIGhlaWdodD0iMjEuNTY0NDg3IgogICAgICAgICAgICAgICB4PSItMjE4Ljg3ODE2IgogICAgICAgICAgICAgICB5PSIxNDQuNzg3MTIiCiAgICAgICAgICAgICAgIHJ5PSIxMC43ODIyNDQiCiAgICAgICAgICAgICAgIHRyYW5zZm9ybT0icm90YXRlKC0xMC4xNTMxMykiIC8+CiAgICAgICAgICA8L2c+CiAgICAgICAgICA8ZwogICAgICAgICAgICAgc3R5bGU9Im92ZXJmbG93OnZpc2libGU7c3Ryb2tlOiMwMDAwMDAiCiAgICAgICAgICAgICBuczA6cmdiVHJpbz0iIzRGMDA4MDAwRkZGRiIKICAgICAgICAgICAgIG5zMDpkaW1tZWRQZXJjZW50PSI1MCIKICAgICAgICAgICAgIG5zMDpsYXllcj0ieWVzIgogICAgICAgICAgICAgaWQ9IkxheWVyXzEiCiAgICAgICAgICAgICB0cmFuc2Zvcm09Im1hdHJpeCgwLjA2NjE0NTgzLDAsMCwwLjA2NjE0NTgzLC01NC42MzE0NiwzNC42MzI1MzgpIj4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxNTgiCiAgICAgICAgICAgICAgIGQ9Ik0gMjM2LjA3MSwzLjQxMSAyMzAuOTc2LDEwLjYyNSAyMi4yOTgsNDguOTQgMS43NDMsMjM0Ljc1MyA2LjQxOSwyNDAuMTcyIDIyNC44NjgsMjAwLjA2MSAyNDAuNzQ3LDguODMgWiIKICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6IzNhNTVhNTtzdHJva2U6bm9uZSIKICAgICAgICAgICAgICAgbnMwOmtub2Nrb3V0PSJPZmYiIC8+CiAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgIGlkPSJwYXRoMTU5IgogICAgICAgICAgICAgICBkPSJNIDIxNi44ODksMTkxLjgwMyAxNi4wNCwyMjguNjggMzAuMjQ1LDU3LjYxMyAyMzEuMDk1LDIwLjczNSBaIgogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojM2E1NWE1O3N0cm9rZTpub25lIgogICAgICAgICAgICAgICBuczA6a25vY2tvdXQ9Ik9mZiIgLz4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxNjAiCiAgICAgICAgICAgICAgIGQ9Ik0gMjMwLjcxOCwyMS4xNjYgMTIyLjcyNiwxNTIuNjcgMzAuNzA5LDU4LjU2MyBaIgogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojM2E1NWE1O3N0cm9rZTpub25lIgogICAgICAgICAgICAgICBuczA6a25vY2tvdXQ9Ik9mZiIgLz4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxNjEiCiAgICAgICAgICAgICAgIGQ9Ik0gMjMwLjc4NiwyMC4zNjggMTIyLjU3MiwxMzIuNjIxIDMwLjU4OCw1Ny41NSBaIgogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDojM2E1NWE1O3N0cm9rZTpub25lIgogICAgICAgICAgICAgICBuczA6a25vY2tvdXQ9Ik9mZiIgLz4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxNjIiCiAgICAgICAgICAgICAgIGQ9Ik0gMjkuNzksNTguNTgxIDEzLjkxMSwyNDkuODEzIDIzMi4zNjEsMjA5LjcwMiAyNDguMjQsMTguNDcxIFoiCiAgICAgICAgICAgICAgIHN0eWxlPSJvcGFjaXR5OjAuMjtzdHJva2U6bm9uZSIKICAgICAgICAgICAgICAgbnMwOmtub2Nrb3V0PSJPZmYiIC8+CiAgICAgICAgICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgICAgICAgICB5Mj0iODMuMzI0MzAzIgogICAgICAgICAgICAgICB4Mj0iODMuMTQ5OTAyIgogICAgICAgICAgICAgICB5MT0iMTY4LjIxMDAxIgogICAgICAgICAgICAgICB4MT0iMTY4LjAzNjEiCiAgICAgICAgICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgICAgICAgICBpZD0ibGluZWFyR3JhZGllbnQyMzAxIj4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjI5NyIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNkQ3QkIwIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMCIgLz4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjI5OSIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojOTlBQ0QyIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMSIgLz4KICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxNjkiCiAgICAgICAgICAgICAgIGQ9Ik0gMjMxLjM5LDQuMjcxIDIyNi4zMDEsNS4yMDYgMTcuNjIyLDQzLjUyMSAxLjc0MywyMzQuNzUzIDIyMC4xOTIsMTk0LjY0MiAyMzYuMDcxLDMuNDExIFoiCiAgICAgICAgICAgICAgIHN0eWxlPSJmaWxsOnVybCgjWE1MSURfMV8pO3N0cm9rZTpub25lIgogICAgICAgICAgICAgICBuczA6a25vY2tvdXQ9Ik9mZiIgLz4KICAgICAgICAgICAgPGxpbmVhckdyYWRpZW50CiAgICAgICAgICAgICAgIHkyPSI4OS43NTAyOTgiCiAgICAgICAgICAgICAgIHgyPSI4My44MzE3MDMiCiAgICAgICAgICAgICAgIHkxPSIxNzQuNjM1NyIKICAgICAgICAgICAgICAgeDE9IjE2OC43MTc4IgogICAgICAgICAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgICAgICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MjMwOCI+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzMDQiCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzZEN0JCMCIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjAiIC8+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzMDYiCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6Izk5QUNEMiIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjEiIC8+CiAgICAgICAgICAgIDwvbGluZWFyR3JhZGllbnQ+CiAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgIGlkPSJwYXRoMTc2IgogICAgICAgICAgICAgICBkPSJtIDIyOC4wNzQsMTcuNTk0IGMgMCwwIC0xOTUuMzcyLDM1Ljg3MiAtMjA0LjExMiwzNy40NzcgLTAuNzAxLDguNDQgLTEzLjY2MiwxNjQuNTM3IC0xNC44MzgsMTc4LjY5OSAxNC4xOTIsLTIuNjA1IDE5Ny42NDQsLTM2LjI5IDIwNi4wODMsLTM3Ljg0IDAuNywtOC40NCAxMy42NjMsLTE2NC41MzUgMTQuODM2LC0xNzguNjk3IC0wLjkzMywwLjE3MiAtMS45NjksMC4zNjEgLTEuOTY5LDAuMzYxIHoiCiAgICAgICAgICAgICAgIHN0eWxlPSJmaWxsOnVybCgjWE1MSURfMl8pO3N0cm9rZTpub25lIgogICAgICAgICAgICAgICBuczA6a25vY2tvdXQ9Ik9mZiIgLz4KICAgICAgICAgICAgPGxpbmVhckdyYWRpZW50CiAgICAgICAgICAgICAgIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMC45OTI5LC0wLjExOTEsLTAuMDU2LDEuMDEzOCw3Ljc1NTYsOC44NzYpIgogICAgICAgICAgICAgICB5Mj0iMjM3LjU3NiIKICAgICAgICAgICAgICAgeDI9IjIzMy41NjIxOSIKICAgICAgICAgICAgICAgeTE9IjEzMC45OTIyIgogICAgICAgICAgICAgICB4MT0iMTI2Ljk3OTUiCiAgICAgICAgICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgICAgICAgICBpZD0ibGluZWFyR3JhZGllbnQyMzE1Ij4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjMxMSIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojRDhFMUVEIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMCIgLz4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjMxMyIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNUU3NkFBIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMSIgLz4KICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxODMiCiAgICAgICAgICAgICAgIGQ9Ik0gMjEyLjIxMywxODYuMzg0IDExLjM2NCwyMjMuMjYxIDI1LjU2OSw1Mi4xOTQgMjI2LjQxOSwxNS4zMTYgWiIKICAgICAgICAgICAgICAgc3R5bGU9ImZpbGw6dXJsKCNYTUxJRF8zXyk7c3Ryb2tlOm5vbmUiCiAgICAgICAgICAgICAgIG5zMDprbm9ja291dD0iT2ZmIiAvPgogICAgICAgICAgICA8bGluZWFyR3JhZGllbnQKICAgICAgICAgICAgICAgeTI9Ijc3LjU2NzI5OSIKICAgICAgICAgICAgICAgeDI9IjEyNi4wMzgxIgogICAgICAgICAgICAgICB5MT0iMTQ0LjgxODQxIgogICAgICAgICAgICAgICB4MT0iMTI2LjAzODEiCiAgICAgICAgICAgICAgIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIgogICAgICAgICAgICAgICBpZD0ibGluZWFyR3JhZGllbnQyMzIyIj4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjMxOCIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojODA4REMyIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMCIgLz4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjMyMCIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojNUU3NkFBIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMSIgLz4KICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgxOTAiCiAgICAgICAgICAgICAgIGQ9Ik0gMjI2LjA0MiwxNS43NDcgMTE4LjA1LDE0Ny4yNTEgMjYuMDM0LDUzLjE0NSBaIgogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDp1cmwoI1hNTElEXzRfKTtzdHJva2U6bm9uZSIKICAgICAgICAgICAgICAgbnMwOmtub2Nrb3V0PSJPZmYiIC8+CiAgICAgICAgICAgIDxsaW5lYXJHcmFkaWVudAogICAgICAgICAgICAgICBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDAuOTkyOSwtMC4xMTkxLC0wLjA1NiwxLjAxMzgsNy43NTU2LDguODc2KSIKICAgICAgICAgICAgICAgeTI9IjEzLjM4NzkiCiAgICAgICAgICAgICAgIHgyPSIxMjEuMjc2OSIKICAgICAgICAgICAgICAgeTE9IjkxLjk3MTcwMyIKICAgICAgICAgICAgICAgeDE9IjEyMS4yNzY5IgogICAgICAgICAgICAgICBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIKICAgICAgICAgICAgICAgaWQ9ImxpbmVhckdyYWRpZW50MjM0NSI+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzMjUiCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I0RCRThGMiIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjAiIC8+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzMjciCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I0Q5RTZGMSIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjAuMjg0NyIgLz4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjMyOSIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojRDFERkVEIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMC40MzU5IiAvPgogICAgICAgICAgICAgIDxzdG9wCiAgICAgICAgICAgICAgICAgaWQ9InN0b3AyMzMxIgogICAgICAgICAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiNDM0QzRTciCiAgICAgICAgICAgICAgICAgb2Zmc2V0PSIwLjU1NTciIC8+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzMzMiCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6I0IwQzNERiIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjAuNjU5IiAvPgogICAgICAgICAgICAgIDxzdG9wCiAgICAgICAgICAgICAgICAgaWQ9InN0b3AyMzM1IgogICAgICAgICAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM5N0FERDMiCiAgICAgICAgICAgICAgICAgb2Zmc2V0PSIwLjc1MTgiIC8+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzMzciCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6Izc4OTNDNSIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjAuODM3IiAvPgogICAgICAgICAgICAgIDxzdG9wCiAgICAgICAgICAgICAgICAgaWQ9InN0b3AyMzM5IgogICAgICAgICAgICAgICAgIHN0eWxlPSJzdG9wLWNvbG9yOiM1NDczQjUiCiAgICAgICAgICAgICAgICAgb2Zmc2V0PSIwLjkxNjMiIC8+CiAgICAgICAgICAgICAgPHN0b3AKICAgICAgICAgICAgICAgICBpZD0ic3RvcDIzNDEiCiAgICAgICAgICAgICAgICAgc3R5bGU9InN0b3AtY29sb3I6IzJCNTBBMiIKICAgICAgICAgICAgICAgICBvZmZzZXQ9IjAuOTg5MSIgLz4KICAgICAgICAgICAgICA8c3RvcAogICAgICAgICAgICAgICAgIGlkPSJzdG9wMjM0MyIKICAgICAgICAgICAgICAgICBzdHlsZT0ic3RvcC1jb2xvcjojMjQ0QTlGIgogICAgICAgICAgICAgICAgIG9mZnNldD0iMSIgLz4KICAgICAgICAgICAgPC9saW5lYXJHcmFkaWVudD4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgyMDUiCiAgICAgICAgICAgICAgIGQ9Ik0gMjI2LjExLDE0Ljk0OSAxMTcuODk2LDEyNy4yMDIgMjUuOTEzLDUyLjEzMSBaIgogICAgICAgICAgICAgICBzdHlsZT0iZmlsbDp1cmwoI1hNTElEXzVfKTtzdHJva2U6bm9uZSIKICAgICAgICAgICAgICAgbnMwOmtub2Nrb3V0PSJPZmYiIC8+CiAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgIGlkPSJwYXRoMjA2IgogICAgICAgICAgICAgICBkPSJtIDE2MS4yODYsMTg4LjczNiBjIDIzLjYxOCwtNC40MyA0NC4xNDIsLTguMjggNDYuNDM3LC04LjcwOCAwLjI4LC0yLjc1OSAyLjM5OSwtMjMuNDc2IDQuODI2LC00Ny4yMDggLTE0Ljk4Nyw0MC4xNCAtMzEuNTM2LDQ5LjMyNiAtNTEuMjYzLDU1LjkxNiB6IgogICAgICAgICAgICAgICBzdHlsZT0ib3BhY2l0eTowLjM7ZmlsbDojZmZmZmZmO3N0cm9rZTpub25lIgogICAgICAgICAgICAgICBuczA6a25vY2tvdXQ9Ik9mZiIgLz4KICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgaWQ9InBhdGgyMDciCiAgICAgICAgICAgICAgIGQ9Im0gNjIuOTU5LDUxLjQyMyBjIC0xMC40MywxLjkzNyAtMTguNDc2LDMuNDMxIC0yMi42OTksNC4yMTYgLTAuMDc3LDAuMDYxIC0wLjE1NCwwLjEyMyAtMC4yMjgsMC4xODIgMTUuMzk4LDEyLjU2NyA3MC40MzksNTcuNDg4IDc3LjM3MSw2My4xNDYgMS41MjUsLTEuNTgxIDYuNTE1LC02Ljc1OSAxMy40NzQsLTEzLjk3NiAtNy4yMDMsMC40MTMgLTE0Ljc1MSwwLjEyNSAtMTkuOTQ4LC0xLjE3NSAtMTEuNDgyLC0yLjg3MSAtNDIuNjQ4LC0yOS41MjUgLTQ5LjYyLC00MS4wMDggLTMuNTQ5LC01Ljg0NiAtMS4zNTYsLTkuMzUgMS42NSwtMTEuMzg1IHoiCiAgICAgICAgICAgICAgIHN0eWxlPSJvcGFjaXR5OjAuNDtmaWxsOiNmZmZmZmY7c3Ryb2tlOm5vbmUiCiAgICAgICAgICAgICAgIG5zMDprbm9ja291dD0iT2ZmIiAvPgogICAgICAgICAgPC9nPgogICAgICAgIDwvZz4KICAgICAgPC9nPgogICAgPC9nPgogIDwvZz4KICA8ZwogICAgIGlua3NjYXBlOmxhYmVsPSJWcnN0dmEgMiIKICAgICBpZD0ibGF5ZXIyIgogICAgIGlua3NjYXBlOmdyb3VwbW9kZT0ibGF5ZXIiIC8+Cjwvc3ZnPgo=",
    "name": "AbraFlexi send",
    "description": "Send all unsent documents",
    "executable": "\/bin\/abraflexi-send-unsent",
    "setup": "",
    "cmdparams": "",
    "deploy": "apt install abraflexi-mailer",
    "homepage": "https://github.com/VitexSoftware/abraflexi-mailer/",
    "environment": {
        "ABRAFLEXI_COMPANY": {
            "type": "string",
            "description": "",
            "defval": "demo_de"
        },
        "ABRAFLEXI_LOGIN": {
            "type": "string",
            "description": "AbraFlexi Login",
            "defval": "winstrom"
        },
        "ABRAFLEXI_PASSWORD": {
            "type": "string",
            "description": "AbraFlexi password",
            "defval": "winstrom"
        },
        "ABRAFLEXI_URL": {
            "type": "string",
            "description": "AbraFlexi Server URI",
            "defval": "https:\/\/demo.flexibee.eu:5434"
        }
    },
    "multiflexi": ""
}
