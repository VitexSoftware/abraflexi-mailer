<?php

declare(strict_types=1);

/**
 * This file is part of the AbraFlexi Mailer package
 *
 * https://github.com/VitexSoftware/abraflexi-mailer
 *
 * (c) VÃ­tÄ›zslav DvoÅ™Ã¡k <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\AbraFlexi\Mailer;

use AbraFlexi\Mailer\Mailer;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2022-10-14 at 14:18:43.
 */
class DocumentMailerTest extends \PHPUnit\Framework\TestCase
{
    public \AbraFlexi\FakturaVydana $invoicer;
    protected Mailer $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->invoicer = new \AbraFlexi\FakturaVydana();
        $this->invoicer->loadFromAbraFlexi($this->invoicer->getFirstRecordID());
        $this->object = new DocumentMailer($this->invoicer);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::templateFile
     */
    public function testtemplateFile(): void
    {
        $this->assertEquals(
            '../templates/faktura-vydana.ftl',
            $this->object->templateFile(),
        );
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::addItem
     */
    public function testaddItem(): void
    {
        $this->assertIsObject($this->object->addItem(new \Ease\Html\PTag('TEST')));
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::getCss
     */
    public function testgetCss(): void
    {
        $this->assertEquals('', $this->object->getCss());
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::getCurrentMailSize
     */
    public function testgetCurrentMailSize(): void
    {
        $this->assertIsNumeric($this->object->getCurrentMailSize());
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::addInvoice
     */
    public function testaddInvoice(): void
    {
        $this->assertEquals(
            '',
            $this->object->addInvoice(new \AbraFlexi\FakturaVydana($this->invoicer->getNextRecordID())),
        );
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::addCompanyLogo
     */
    public function testaddCompanyLogo(): void
    {
        $this->assertEquals('', $this->object->addCompanyLogo('test'));
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::addQrCode
     */
    public function testaddQrCode(): void
    {
        $this->assertEquals('', $this->object->addQrCode());
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::addAttachments
     */
    public function testaddAttachments(): void
    {
        $this->assertIsArray($this->object->addAttachments());
    }

    /**
     * @covers \AbraFlexi\Mailer\Mailer::send
     */
    public function testsend(): void
    {
        $this->assertTrue($this->object->send());
    }
}
