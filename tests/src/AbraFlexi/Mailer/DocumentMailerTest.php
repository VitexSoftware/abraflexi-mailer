<?php

namespace Test\AbraFlexi\Mailer;

use AbraFlexi\Mailer\Mailer;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2022-10-14 at 14:18:43.
 */
class DocumentMailerTest extends \PHPUnit\Framework\TestCase
{

    /**
     * @var Mailer
     */
    protected $object;

    /**
     *
     * @var \AbraFlexi\FakturaVydana
     */
    public $invoicer;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->invoicer = new \AbraFlexi\FakturaVydana();
        $this->invoicer->loadFromAbraFlexi($this->invoicer->getFirstRecordID());
        $this->object = new DocumentMailer($this->invoicer);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
        
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::templateFile
     */
    public function testtemplateFile()
    {
        $this->assertEquals(
                '../templates/faktura-vydana.ftl',
                $this->object->templateFile()
        );
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::addItem
     */
    public function testaddItem()
    {
        $this->assertIsObject($this->object->addItem(new \Ease\Html\PTag("TEST")));
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::getCss
     */
    public function testgetCss()
    {
        $this->assertEquals('', $this->object->getCss());
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::getCurrentMailSize
     */
    public function testgetCurrentMailSize()
    {
        $this->assertIsNumeric($this->object->getCurrentMailSize());
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::addInvoice
     */
    public function testaddInvoice()
    {
        $this->assertEquals(
                '',
                $this->object->addInvoice(new \AbraFlexi\FakturaVydana($this->invoicer->getNextRecordID()))
        );
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::addCompanyLogo
     */
    public function testaddCompanyLogo()
    {
        $this->assertEquals('', $this->object->addCompanyLogo('test'));
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::addQrCode
     */
    public function testaddQrCode()
    {
        $this->assertEquals('', $this->object->addQrCode());
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::addAttachments
     */
    public function testaddAttachments()
    {
        $this->assertIsArray($this->object->addAttachments());
    }

    /**
     * @covers AbraFlexi\Mailer\Mailer::send
     */
    public function testsend()
    {
        $this->assertTrue($this->object->send());
    }
}
